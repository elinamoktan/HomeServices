# Generated by Django 5.1.1 on 2025-10-01 15:44

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('jobs', '0028_favoriteworker'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='customer',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='favoriteworker',
            options={'ordering': ['-created_at'], 'verbose_name': 'Favorite Worker', 'verbose_name_plural': 'Favorite Workers'},
        ),
        migrations.AlterModelOptions(
            name='service',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='servicecategory',
            options={'ordering': ['name'], 'verbose_name_plural': 'Service Categories'},
        ),
        migrations.AlterModelOptions(
            name='subtask',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='worker',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='workerrating',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='workerservice',
            options={'ordering': ['service__name']},
        ),
        migrations.AlterModelOptions(
            name='workersubtaskpricing',
            options={'ordering': ['subtask__name']},
        ),
        migrations.AlterUniqueTogether(
            name='workerrating',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='customer',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='customer',
            name='location_accuracy',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='location_address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='location_source',
            field=models.CharField(choices=[('browser', 'Browser Geolocation'), ('ip', 'IP Address'), ('manual', 'Manual Entry'), ('unknown', 'Unknown')], default='unknown', max_length=20),
        ),
        migrations.AddField(
            model_name='customer',
            name='location_updated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='service',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='service',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='subtask',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='subtask',
            name='detailed_description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='subtask',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='worker',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='worker',
            name='is_available',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='worker',
            name='location_accuracy',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='worker',
            name='location_address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='worker',
            name='location_source',
            field=models.CharField(choices=[('browser', 'Browser Geolocation'), ('ip', 'IP Address'), ('manual', 'Manual Entry'), ('unknown', 'Unknown')], default='unknown', max_length=20),
        ),
        migrations.AddField(
            model_name='worker',
            name='location_updated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='worker',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='workerservice',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='workerservice',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='workersubtaskpricing',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='workersubtaskpricing',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='appointment',
            name='id',
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='customer',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='customer',
            name='phone_number',
            field=phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='NP'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='profile_pic',
            field=models.ImageField(blank=True, null=True, upload_to='customer_profiles/'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='title',
            field=models.CharField(max_length=200),
        ),
        migrations.AlterField(
            model_name='service',
            name='base_pricing_type',
            field=models.CharField(choices=[('hourly', 'Hourly Rate'), ('sqft', 'Per Square Foot'), ('unit', 'Per Unit/Item'), ('inspection', 'Per Inspection'), ('shift', 'Shift-based'), ('fixed', 'Fixed Price')], default='fixed', max_length=20),
        ),
        migrations.AlterField(
            model_name='subtask',
            name='default_pricing_type',
            field=models.CharField(choices=[('hourly', 'Hourly Rate'), ('sqft', 'Per Square Foot'), ('unit', 'Per Unit/Item'), ('inspection', 'Per Inspection'), ('shift', 'Shift-based'), ('fixed', 'Fixed Price')], default='fixed', max_length=20),
        ),
        migrations.AlterField(
            model_name='worker',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='worker',
            name='phone_number',
            field=phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='NP'),
        ),
        migrations.AlterField(
            model_name='worker',
            name='profile_pic',
            field=models.ImageField(blank=True, null=True, upload_to='worker_profiles/'),
        ),
        migrations.AlterField(
            model_name='worker',
            name='tagline',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='workerrating',
            name='appointment',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='jobs.appointment'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='workerrating',
            name='customer',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='given_ratings', to='jobs.customer'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='workerrating',
            name='rating',
            field=models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='workerservice',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='worker_services', to='jobs.worker'),
        ),
        migrations.AlterUniqueTogether(
            name='workerrating',
            unique_together={('appointment', 'customer')},
        ),
        migrations.CreateModel(
            name='WorkerPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='worker_portfolio/')),
                ('before_image', models.ImageField(blank=True, null=True, upload_to='portfolio/before/')),
                ('after_image', models.ImageField(blank=True, null=True, upload_to='portfolio/after/')),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.servicecategory')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio', to='jobs.worker')),
            ],
            options={
                'verbose_name_plural': 'Worker Portfolios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkerSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('appointment_reminders', models.BooleanField(default=True)),
                ('review_notifications', models.BooleanField(default=True)),
                ('working_hours_start', models.TimeField(default='09:00')),
                ('working_hours_end', models.TimeField(default='18:00')),
                ('service_radius_km', models.PositiveIntegerField(default=25)),
                ('auto_accept_appointments', models.BooleanField(default=False)),
                ('preferred_payment_method', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('upi', 'UPI'), ('cash', 'Cash')], default='bank_transfer', max_length=50)),
                ('language', models.CharField(default='en', max_length=10)),
                ('timezone', models.CharField(default='Asia/Kolkata', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('worker', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='jobs.worker')),
            ],
            options={
                'verbose_name_plural': 'Worker Settings',
            },
        ),
        migrations.CreateModel(
            name='ServiceArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_name', models.CharField(max_length=100)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_areas', to='jobs.worker')),
            ],
            options={
                'ordering': ['area_name'],
                'unique_together': {('worker', 'area_name')},
            },
        ),
        migrations.CreateModel(
            name='WorkerAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_appointments', models.PositiveIntegerField(default=0)),
                ('completed_appointments', models.PositiveIntegerField(default=0)),
                ('cancelled_appointments', models.PositiveIntegerField(default=0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('new_customers', models.PositiveIntegerField(default=0)),
                ('repeat_customers', models.PositiveIntegerField(default=0)),
                ('average_response_time', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='jobs.worker')),
            ],
            options={
                'verbose_name_plural': 'Worker Analytics',
                'ordering': ['-date'],
                'unique_together': {('worker', 'date')},
            },
        ),
        migrations.CreateModel(
            name='WorkerAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.PositiveSmallIntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='jobs.worker')),
            ],
            options={
                'verbose_name_plural': 'Worker Availabilities',
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('worker', 'day_of_week')},
            },
        ),
        migrations.CreateModel(
            name='WorkerEarning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('platform_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jobs.appointment')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='jobs.worker')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['worker', 'payment_status'], name='jobs_worker_worker__212be0_idx'), models.Index(fields=['payment_date'], name='jobs_worker_payment_f27c9d_idx')],
            },
        ),
    ]
